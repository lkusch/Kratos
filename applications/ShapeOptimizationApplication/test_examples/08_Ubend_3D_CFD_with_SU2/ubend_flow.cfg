%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: Ubend 3D based on wedge                                    %
% Author: Thomas D. Economon, Lisa Kusch (update)                              %
% Institution: Stanford University                                             %
% Date: 2012.10.07                                                             %
% File Version 7.1.1 ("Blackbird")                                             %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%
%
% Physical governing equations (EULER, NAVIER_STOKES,
%                               TNE2_EULER, TNE2_NAVIER_STOKES,
%                               WAVE_EQUATION, HEAT_EQUATION, LINEAR_ELASTICITY,
%                               POISSON_EQUATION)                             
SOLVER= INC_RANS
%
% Specify turbulent model (NONE, SA, SA_NEG, SST)
KIND_TURB_MODEL= SST
%
% Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT)
MATH_PROBLEM= DIRECT
%
% Use multiphysics discrete adjoint driver (the one that is validated for this test case)
%MULTIPHYSICS_DISCRETE_ADJOINT= YES
%
% Direct differentiation mode
%DIRECT_DIFF=DESIGN_VARIABLES
%
% Regime type (COMPRESSIBLE, INCOMPRESSIBLE, FREESURFACE)
%REGIME_TYPE= INCOMPRESSIBLE
%
% Restart solution (NO, YES)
RESTART_SOL= NO
%
% Write binary restart files (YES, NO)
%WRT_BINARY_RESTART= NO
%
% Read binary restart files (YES, NO)
%READ_BINARY_RESTART= YES
%
% History output, you might want the first for direct derivatives and the second for just a direct run.
% Nothing needs to be specified for discrete adjoint runs.
%HISTORY_OUTPUT=(ITER, RMS_RES, SURFACE_OUTPUT, D_SURFACE_OUTPUT, AERO_COEFF_SURF, D_AERO_COEFF_SURF)
%HISTORY_OUTPUT=(ITER, RMS_RES, FLOW_COEFF)
%
% Objective function
OBJECTIVE_FUNCTION=SURFACE_TOTAL_PRESSURE
%
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING= ( BOGEN )
%
% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= ( IN  )
%
% Similar to monitoring, used within the new output structures
MARKER_ANALYZE=( IN )
%
% Marker(s) of the surface where objective function (design problem) will be evaluated
% MARKER_DESIGNING= (IN )
%
% ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%
%
% Solve the energy equation in the incompressible flow solver
INC_ENERGY_EQUATION = NO
%
% Free-stream density (1.2886 Kg/m^3 (air), 998.2 Kg/m^3 (water))
INC_DENSITY_INIT= 998.2
%
% Free-stream velocity (m/s)
INC_VELOCITY_INIT= (0.4, 0.00, 0.00 )
%
% Viscosity settings
VISCOSITY_MODEL= CONSTANT_VISCOSITY
%
MU_CONSTANT= 0.798E-3
%
MU_REF= 0.798E-3
%
% Non-dimensionalization scheme for incompressible flows. Options are
% INITIAL_VALUES (default), REFERENCE_VALUES, or DIMENSIONAL.
% INC_*_REF values are ignored unless REFERENCE_VALUES is chosen.
INC_NONDIM= DIMENSIONAL

% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
% Reference origin for moment computation
REF_ORIGIN_MOMENT_X = 0.00
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00
%
% Reference length for pitching, rolling, and yawing non-dimensional moment
REF_LENGTH= 1.0
%
% Reference area for force coefficients (0 implies automatic calculation)
REF_AREA= 1.0
%
% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Euler wall boundary marker(s) (NONE = no marker)
%MARKER_EULER= ( OBEN, UNTEN )
% Navier-Stokes wall boundary marker(s) (NONE = no marker)
MARKER_HEATFLUX= ( ABLAUF, 0.0,ZULAUF, 0.0, BOGEN, 0.0)
% Inlet boundary type
INC_INLET_TYPE= VELOCITY_INLET
%
% Inlet boundary marker(s) with the following formats (NONE = no marker) 
% Total Conditions: (inlet marker, total temp, total pressure, flow_direction_x, 
%           flow_direction_y, flow_direction_z, ... ) where flow_direction is
%           a unit vector.
% Mass Flow: (inlet marker, density, velocity magnitude, flow_direction_x, 
%           flow_direction_y, flow_direction_z, ... ) where flow_direction is
%           a unit vector.
MARKER_INLET= ( IN, 998.2, 0.4, 1.0, 0.0, 0.0 )
%
% Outlet boundary marker(s) (NONE = no marker)
% Format: ( outlet marker, back pressure (static), ... )
INC_OUTLET_TYPE= PRESSURE_OUTLET
MARKER_OUTLET= ( OUT, 0.0 )
%
% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
% Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, 
%                                         WEIGHTED_LEAST_SQUARES)
NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES
%
% Courant-Friedrichs-Lewy condition of the finest grid
CFL_NUMBER= 150.0
%
% Adaptive CFL number (NO, YES)
CFL_ADAPT= NO
%
% Parameters of the adaptive CFL number (factor down, factor up, CFL min value,
%                                        CFL max value )
CFL_ADAPT_PARAM= ( 1.5, 0.5, 1.25, 50.0 )
%
% Runge-Kutta alpha coefficients
RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 )
%

%
% Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, 
%                                                      SMOOTHER_ILU0, SMOOTHER_LUSGS, 
%                                                      SMOOTHER_LINELET)
LINEAR_SOLVER= FGMRES
%
% Preconditioner of the Krylov linear solver (ILU0, LU_SGS, LINELET, JACOBI)
LINEAR_SOLVER_PREC= ILU
%
% Minimum error of the linear solver for implicit formulations
LINEAR_SOLVER_ERROR= 1E-4
%
% Max number of iterations of the linear solver for the implicit formulation
LINEAR_SOLVER_ITER= 10

% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
% Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,
%                              TURKEL_PREC, MSW)
CONV_NUM_METHOD_FLOW= FDS
%
% Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER)
%
MUSCL_FLOW=YES
%
% Slope limiter (VENKATAKRISHNAN, MINMOD)
SLOPE_LIMITER_FLOW= NONE
%
% Coefficient for the limiter (smooth regions)
%LIMITER_COEFF= 0.3
%
% 1st, 2nd and 4th order artificial dissipation coefficients
JST_SENSOR_COEFF= ( 0.5, 0.02 )
%
% Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT)
TIME_DISCRE_FLOW= EULER_IMPLICIT

% Relaxation coefficient
%RELAXATION_FACTOR_FLOW= 1.0

% -------------------- TURBULENT NUMERICAL METHOD DEFINITION ------------------%
%

% Convective numerical method (SCALAR_UPWIND)
CONV_NUM_METHOD_TURB= SCALAR_UPWIND
%
% Slope limiter (VENKATAKRISHNAN, MINMOD)
SLOPE_LIMITER_TURB= VENKATAKRISHNAN
%
% Time discretization (EULER_IMPLICIT)
TIME_DISCRE_TURB= EULER_IMPLICIT
%
% Reduction factor of the CFL coefficient in the turbulence problem
CFL_REDUCTION_TURB= 1.0

% Relaxation coefficient
%RELAXATION_FACTOR_TURB= 1.0
% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
% Number of total iterations
ITER=1000
%400
% Convergence criteria (CAUCHY, RESIDUAL)
%
CONV_CRITERIA= RESIDUAL
%
% Residual reduction (order of magnitude with respect to the initial value)
%RESIDUAL_REDUCTION= 9
%
% Min value of the residual (log10 of the residual)
CONV_RESIDUAL_MINVAL= -12
%
% Start convergence criteria at iteration number
CONV_STARTITER= 10
%
% Number of elements to apply the criteria
CONV_CAUCHY_ELEMS= 100
%
% Epsilon to control the series convergence
CONV_CAUCHY_EPS= 1E-6
%
% Function to apply the criteria (LIFT, DRAG, NEARFIELD_PRESS, SENS_GEOMETRY, 
% 	      	    		 SENS_MACH, DELTA_LIFT, DELTA_DRAG)
CONV_FIELD= DRAG

%
% DV settings
%DV_KIND= FFD_SETTING
DV_KIND= SURFACE_FILE

DV_MARKER= ( BOGEN )

DV_PARAM= ( 1,0.5 )

DV_VALUE= 0.01

%VISUALIZE_VOLUME_DEF= YES

% FFD settings
%FFD_DEFINITION = (MAIN_BOX, 0.2, -0.045, -0.015,  0.25, -0.045, -0.015, 0.25, 0.045, -0.015, 0.2, 0.045, -0.015, 0.2, -0.045, 0.015,  0.25, -0.045, 0.015, 0.25, 0.045, 0.015, 0.2, 0.045, 0.015)

%FFD_BLENDING= BSPLINE_UNIFORM

%FFD_BSPLINE_ORDER= 3,3,3

%FFD_DEGREE=(4,4,2)

%FFD_ITERATIONS= 500

%FFD_TOLERANCE= 1E-16

% ------------------------ GRID DEFORMATION PARAMETERS ------------------------%
%
% Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB)
DEFORM_LINEAR_SOLVER= FGMRES
%
% Number of smoothing iterations for mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 200
%
% Number of nonlinear deformation iterations (surface deformation increments)
DEFORM_NONLINEAR_ITER= 1
%
% Print the residuals during mesh deformation to the console (YES, NO)
DEFORM_CONSOLE_OUTPUT= YES
%
% Factor to multiply smallest cell volume for deform tolerance (0.001 default)
%DEFORM_TOL_FACTOR = 1e-10
%
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME,
%                                          WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= INVERSE_VOLUME

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
% Mesh input file
%MESH_FILENAME=ubend.su2
MESH_FILENAME=ubend.su2
%MESH_FILENAME=ubend_def.su2
%
% Mesh input file format (SU2, CGNS, NETCDF_ASCII)
MESH_FORMAT= SU2
%
% Mesh output file
%MESH_OUT_FILENAME= ubend_def.su2
%MESH_OUT_FILENAME= ubend_ffd.su2
MESH_OUT_FILENAME= mesh_out.su2
%
% Restart flow input file
SOLUTION_FILENAME= solution_flow.dat
%
% Restart adjoint input file
SOLUTION_ADJ_FILENAME= solution_adj.dat
%
% Output file format (PARAVIEW, TECPLOT, TECPLOT_BINARY)
TABULAR_FORMAT= CSV
OUTPUT_FILES=(RESTART, PARAVIEW, SURFACE_TECPLOT_ASCII, SURFACE_CSV)
VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE, SENSITIVITY, NODE_ID)
%
% Output file convergence history (w/o extension) 
CONV_FILENAME= history
%
% Output file restart flow
RESTART_FILENAME= restart_flow.dat
%
% Output file restart adjoint
RESTART_ADJ_FILENAME= restart_adj.dat
%
%
% Output file flow (w/o extension) variables
VOLUME_FILENAME= flow
%
% Output file adjoint (w/o extension) variables
VOLUME_ADJ_FILENAME= adjoint
%
%
% Output objective function gradient (using continuous adjoint)
GRAD_OBJFUNC_FILENAME= of_grad.dat
%
% Output file surface flow coefficient (w/o extension)
SURFACE_FILENAME= surface_flow
%
% Output file surface adjoint coefficient (w/o extension)
SURFACE_ADJ_FILENAME= surface_adjoint
%
%
% Writing solution file frequency
OUTPUT_WRT_FREQ= 250
%
%
FROZEN_LIMITER_DISC=NO
ENTROPY_FIX_COEFF=0.0

OPT_OBJECTIVE=SURFACE_TOTAL_PRESSURE * 1E-2
% Optimization constraint functions with scaling factors, separated by semicolons
% ex= (Objective = Value ) * Scale, use '>','<','='
%OPT_CONSTRAINT= ( LIFT > 0.828 ) * 0.001; ( MAX_THICKNESS < 0.185 ) * 0.001; ( MAX_THICKNESS > 0.175 ) * 0.001
OPT_CONSTRAINT= NONE
% Maximum number of optimizer iterations
%OPT_ITERATIONS= 50
%
% Requested accuracy
%OPT_ACCURACY= 1E-8
%
% Upper bound for each design variable
%OPT_BOUND_UPPER= 0.005
%
% Lower bound for each design variable
%OPT_BOUND_LOWER= -0.005

DEFINITION_DV= (36, 1.0 | BOGEN | 0, 0.5)
%DEFINITION_DV= ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 0, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 0, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 1, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 1, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 2, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 2, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 3, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 3, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 4, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 4, 0, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 0, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 0, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 1, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 1, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 2, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 2, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 3, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 3, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 4, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 4, 1, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 0, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 0, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 1, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 1, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 2, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 2, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 3, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 3, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 3, 4, 2, 1.0, 0.0, 0.0 ); ( 7, 1.0 | BOGEN | MAIN_BOX, 4, 4, 2, 1.0, 0.0, 0.0 )
